@using Blog.Domain.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Blog.Presentation.Web.ViewModels.Admin.GetPostsViewModel

@{
    ViewData["Title"] = "Posts Admin";
    var previousPage = Model.CurrentPage - 1;
    var nextPage = Model.CurrentPage + 1;
}


<div class="mt-4">
    <div class="d-flex justify-content-between mb-3">
        <h3>Posts</h3>
        <div>
            @if (User.IsInRole(Role.Author.ToString()))
            {
                <a asp-action="CreatePost" class="btn btn-success">
                    <i class="bi bi-plus-circle me-1"></i>
                    Add
                </a>
            }
            <a asp-action="Index" asp-controller="Admin" class="btn btn-outline-danger">
                <i class="bi bi-arrow-left me-1"></i>
                Back
            </a>
        </div>
    </div>
    <form method="get" class="d-flex my-3">
    <div class="input-group">
        <input type="text" name="searchTerm" class="form-control" placeholder="Search posts"
            value="@Model.SearchTerm" />
        <button type="submit" class="btn btn-outline-primary">
            <i class="bi bi-search me-1"></i>
            Search
        </button>
    </div>
    </form>
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Title</th>
                <th scope="col">Slug</th>
                <th scope="col">Author</th>
                <th scope="col">Post Date</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var post in Model.Posts)
            {
                <tr id="@post.Title">
                    <th scope="row">@post.Id</th>
                    <td>@post.Title</td>
                    <td>@post.Slug</td>
                    <td>Yan Carlos</td>
                    <td>@post.PostDate.ToString("MM/dd/yyyy")</td>
                    <td class="d-flex gap-2">
                        <a class="btn btn-info" target="_blank" href="@Url.ActionLink("", "Post")/@post.Slug">
                            <i class="bi bi-box-arrow-up-right"></i>
                        </a>
                        @if (User.IsInRole(Role.Author.ToString()))
                        {
                            <a class="btn btn-warning" asp-action="UpdatePost" asp-route-slug="@post.Slug">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <button id="delete-post-button-@post.Slug" class="btn btn-danger" data-bs-toggle="modal"
                                data-bs-target="#deleteModal" onclick="handleDeletePost(@post.Id, '@post.Title')">
                                <i class="bi bi-trash"></i>
                            </button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="d-flex justify-content-end">
    <nav>
        <ul class="pagination">
            <li class="page-item">
                <a class="page-link" asp-action="GetPosts" asp-route-searchTerm="@Model.SearchTerm">Previous</a>
             </li>
            @for (var i = 1; i <= Model.LastPage; i++)
            {
                <li class="page-item">
                    @if (i == Model.CurrentPage)
                    {
                        <a class="page-link active" href="#">
                            @i
                        </a>
                    }
                    else
                    {
                        var i1 = i;
                        <a class="page-link" asp-action="GetPosts" 
                           asp-route-page="@i1" asp-route-searchTerm="@Model.SearchTerm">
                             @i1
                        </a>
                    }
                </li>
            }
            <li class="page-item">
                 <a class="page-link" asp-action="GetPosts" 
                   asp-route-page="@nextPage" asp-route-searchTerm="@Model.SearchTerm">Next</a>
            </li> 
    </nav>
</div>
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">Delete post</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                Do you want to delete the post
                <span id="post-delete-title" class="fw-bold"></span>?
            </div>
            <form method="post" asp-action="DeletePost" class="modal-footer">
                <input id="post-id-input" name="id" type="hidden" />
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button id="confirm-delete-post-button" type="submit" class="btn btn-danger">Delete</button>
            </form>

        </div>
    </div>
</div>

@section Scripts
{
    <script>
        function handleDeletePost(id, title) {
            document.getElementById('post-id-input').value = id;
            document.getElementById('post-delete-title').innerHTML = title;
        }

    </script>
}
